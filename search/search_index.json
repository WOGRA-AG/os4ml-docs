{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Open space for Machine Learning ( Os4ML ) is an open source platform for automated machine learning. The goal is to enable non-experts to solve every day problems with AI. It automates all steps on the way to the finished AI model with the help of an intuitive UI/UX. About the Project The project focuses on easy installation, intuitive UI/UX and comfortable machine learning. We're not reinventing the wheel. Whenever possible, we use third-party open source software. The project is in an early phase, i.e. everything is work in progress and experimental. We plan to release a first demo version at the end of March. License Os4ML is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0). See LICENSE-APACHE , LICENSE-MIT , and COPYRIGHT for details.","title":"Os4ML"},{"location":"#about-the-project","text":"The project focuses on easy installation, intuitive UI/UX and comfortable machine learning. We're not reinventing the wheel. Whenever possible, we use third-party open source software. The project is in an early phase, i.e. everything is work in progress and experimental. We plan to release a first demo version at the end of March.","title":"About the Project"},{"location":"#license","text":"Os4ML is primarily distributed under the terms of both the MIT license and the Apache License (Version 2.0). See LICENSE-APACHE , LICENSE-MIT , and COPYRIGHT for details.","title":"License"},{"location":"about_us/","text":"About Us Os4ML is a project of the WOGRA AG research group in cooperation with the German Aerospace Center and is funded by the Ministry of Economic Affairs, Regional Development and Energy as part of the High Tech Agenda of the Free State of Bavaria.","title":"About Us"},{"location":"about_us/#about-us","text":"Os4ML is a project of the WOGRA AG research group in cooperation with the German Aerospace Center and is funded by the Ministry of Economic Affairs, Regional Development and Energy as part of the High Tech Agenda of the Free State of Bavaria.","title":"About Us"},{"location":"architecture/","text":"Architecture Os4ML is designed as open source cloud-native application which runs on Kubernetes clusters. On the one hand it consists of a set of multiple python services using FastAPI and an Angular frontend. On the other hand it uses standard frameworks for common problems like Keycloak for authorization, Istio as ingress gateway, MinIO as high performance object storage and Kubeflow Pipelines as workflow engine. Thus, Os4ML benefits from the development performance of a strong open source community. This allows us to concentrate on high-level AI solutions.","title":"Architecture"},{"location":"architecture/#architecture","text":"Os4ML is designed as open source cloud-native application which runs on Kubernetes clusters. On the one hand it consists of a set of multiple python services using FastAPI and an Angular frontend. On the other hand it uses standard frameworks for common problems like Keycloak for authorization, Istio as ingress gateway, MinIO as high performance object storage and Kubeflow Pipelines as workflow engine. Thus, Os4ML benefits from the development performance of a strong open source community. This allows us to concentrate on high-level AI solutions.","title":"Architecture"},{"location":"installation/","text":"Installation Nobody wants complicated installations. We neither. For this reason we provided Terraform scripts in the past to install fully functional Os4ML on a k3d cluster. k3d cluster k3d says it's 'a lightweight wrapper to run k3s (Rancher Lab\u2019s minimal Kubernetes distribution) in docker'. Well yes, that's what it does, and it does it great. We use k3d for daily development. Thus, you can assume that Os4ML runs stably on k3d . With k3d you can do it like this, for example k3d cluster create --image rancher/k3s:v1.21.7-k3s1 os4ml-cluster REMARK: We recommend to use the k3s:v1.21.7-k3s1 image in order to avoid API conflicts. Terraform This is work in progress, stay tuned till October 11th! GPU Support For sure, if you want to do machine learning, you want to use GPUs. So, what about GPU support? Os4ML automatically uses GPUs if they are available in the Kubernetes cluster. Unfortunately, GPUs are known to be a topic of their own. k3d describes it in their documentation here . If you have problems building the Docker image, remember to install the nvidia-container-toolkit in addition to the nvidia-container-runtime .","title":"Installation"},{"location":"installation/#installation","text":"Nobody wants complicated installations. We neither. For this reason we provided Terraform scripts in the past to install fully functional Os4ML on a k3d cluster.","title":"Installation"},{"location":"installation/#k3d-cluster","text":"k3d says it's 'a lightweight wrapper to run k3s (Rancher Lab\u2019s minimal Kubernetes distribution) in docker'. Well yes, that's what it does, and it does it great. We use k3d for daily development. Thus, you can assume that Os4ML runs stably on k3d . With k3d you can do it like this, for example k3d cluster create --image rancher/k3s:v1.21.7-k3s1 os4ml-cluster REMARK: We recommend to use the k3s:v1.21.7-k3s1 image in order to avoid API conflicts.","title":"k3d cluster"},{"location":"installation/#terraform","text":"This is work in progress, stay tuned till October 11th!","title":"Terraform"},{"location":"installation/#gpu-support","text":"For sure, if you want to do machine learning, you want to use GPUs. So, what about GPU support? Os4ML automatically uses GPUs if they are available in the Kubernetes cluster. Unfortunately, GPUs are known to be a topic of their own. k3d describes it in their documentation here . If you have problems building the Docker image, remember to install the nvidia-container-toolkit in addition to the nvidia-container-runtime .","title":"GPU Support"}]}